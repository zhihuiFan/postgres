set geqo to off;
create table t1(a int, b int not null, c int, d int);
create table t2(a int, b int not null, c int, d int);
-- single rel
select * from t1;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 9)
 a | b | c | d 
---+---+---+---
(0 rows)

select * from t1 where a > 1;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 8 9)
 a | b | c | d 
---+---+---+---
(0 rows)

select * from t2 where a > 1 or c > 1;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 9)
 a | b | c | d 
---+---+---+---
(0 rows)

-- partitioned relation.
-- append rel: all the childrel are not nullable.
create table p (a int, b int, c int not null) partition by range(a);
create table p_1 partition of p for values from (0) to (10000) partition by list(b);
create table p_1_1(b int,  c int not null, a int);
alter table p_1 attach partition p_1_1 for values in (1);
-- p(1)  - 3(c)
-- p_1(2) - 3(c)
-- p_1_1(3) - 2(c)
select * from p;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(3), notnull_attrs = (b 9)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(2), notnull_attrs = (b 10)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 10)
 a | b | c 
---+---+---
(0 rows)

-- p(1)  - 3(c) 1(a)
-- p_1(2) - 3(c) 1(a)
-- p_1_1(3) - 2(c) 3(a)
select * from p where a > 1;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(3), notnull_attrs = (b 9 10)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(2), notnull_attrs = (b 8 10)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 8 10)
 a | b | c 
---+---+---
(0 rows)

-- test join:
-- t1: b
-- t2: b
-- t{1, 2}:  t1.a, t1.b t2.b t2.c
select * from t1, t2 where t1.a = t2.c;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 9)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(2), notnull_attrs = (b 9)
INFO:  Dump notnull for JoinRel((b 1 2))
INFO:  FirstLowInvalidHeapAttributeNumber = -7, RELID = (1), notnull_attrs: (b 8 9)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, RELID = (2), notnull_attrs: (b 9 10)
 a | b | c | d | a | b | c | d 
---+---+---+---+---+---+---+---
(0 rows)

-- t1: b
-- t2: b
-- t{1, 2}:  none due to full join
select * from t1 full join t2 on t1.a = t2.a;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 9)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(2), notnull_attrs = (b 9)
 a | b | c | d | a | b | c | d 
---+---+---+---+---+---+---+---
(0 rows)

-- t1: b
-- t2: b
-- t{1, 2}:  t1.b t1.a   (t2.a t2.b is nullable due to outer join)
select * from t1 left join t2 on t1.a = t2.a;
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(1), notnull_attrs = (b 9)
INFO:  FirstLowInvalidHeapAttributeNumber = -7, BaseRel(2), notnull_attrs = (b 9)
INFO:  Dump notnull for JoinRel((b 1 2))
INFO:  FirstLowInvalidHeapAttributeNumber = -7, RELID = (1), notnull_attrs: (b 8 9)
 a | b | c | d | a | b | c | d 
---+---+---+---+---+---+---+---
(0 rows)

-- TODO: union, simple union all, subquery, group by, order by, WindowAgg.
drop table t1;
drop table t2;
drop table p;
